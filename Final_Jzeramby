---
title: "FinalProject_JZeramby"
author: "Jessica Zeramby"
date: "6/30/2021"
output:
  html_document:
    df_print: paged
  pdf_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

#load packages

```{echo = FALSE}
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
library(tidyr)
library(plotly)
library(scales)
library(readr)
library(data.table)
library(flextable)
library(gridExtra)
install.packages("flextable")
install.packages("tidyverse")
install.packages("data.table")
install.packages("ggplot2")
install.packages("gridExtra")
```

#Final Project Introduction
Wildlife Rehabilitation Data: An Underutilized Resource for Characterizing Trends in Human-Wildlife Conflicts An exploratory data analysis based in Southern Rhode Island

#Analysis of Wildlife Rehabilitation Records to answer three key questions
1.	What are the most common causes of injury to wildlife in Rhode Island?
2.	Which species are most threatened or vulnerable in Rhode Island?
3.	How many animals are admitted to this rehabilitation facility on a regular basis, or what is the average number of intakes to this facility?

#Approach to answering key questions
To answer these key questions, each yearly intake file will be analyzed individually, and then all four years of data will be combined to compare and contrast trends, patterns, and themes over time. To identify the most common injuries to Rhode Island wildlife, the leading reasons for admission to the facility will be used as an indicator of the types of injuries most commonly encountered. The number of clinic admissions for each species in each year and across all years will be used to determine the most vulnerable or threatened species in Rhode Island. Finally, to identify any annual, monthly, or seasonal variation in animal admissions to the clinic, the total number of admissions to the facility will be calculated for each month, season, and year. 

##uploading raw data files as CSV files
```{r}
X2014Records <- read_csv("2014Records.csv")
X2016Records <- read_csv("2016Records.csv")
X2018Records <- read_csv("2018Records.csv")
X2019Records <- read_csv("2019Records.csv")
```

# Begin analysis
To begin the analysis, yearly intake records from 2014, 2016, 2018, and 2019 were uploaded to the server as csv files. I started the exploratory analysis with the file containing the 2014 intake records after loading each of the four files onto the server. 
Starting with the 2014 data file, I began the process of organizing, filtering, and cleaning the data. First, I modified the format of the column titles by removing all spaces and capital letters and renaming them in a way that the server could understand and that would be consistent across all files in this analysis. Following that, I extracted the important columns that contained relevant data for my analysis. I also removed or excluded rows and columns that contained unnecessary or irrelevant data, those with obvious gaps in data and missing information, and those with repetitive or unclear data. This is also where I removed portions of the files that I was not granted permission to include in this analysis by my data source, such as those containing personal or private information or information that is not publicly accessible.

```{r, echo=FALSE}
#starting with 2014 data
#clean 2014 data
Records_14 <- rename(X2014Records, date = "Intake Date", species_class = "Species Class", species = "Species", specific_location = "Specific Location", city = "City Found", cause_for_admission = "Cause for Admission")
#extract important columns
Records_14 <- select(Records_14, c(1,2,3,7,8,9))
```

Following that, I changed the format of the “intake date” column from character to numeric date format so that the server could recognize the data in this column as a date. In addition, I extracted the month from the date column and created a new column that only contained the month of intake. I also filtered the data to exclude any existing “NA’s”.

```{r, echo=FALSE}
#change date format for 2014 
Records_14 <- Records_14 %>%
mutate(date = mdy(date))

#Add month column from date column for 2014
Records_14$month <- month(Records_14$date)

#remove NA for 2014 data
Records_14 <- Records_14 %>%
  filter(!is.na(date))
```

After cleaning and organizing the 2014 data, I began to explore my data and attempted to answer my research questions. Starting with the average number of admissions in each year, I wanted to see how each month of 2014 varied in terms of the average number of admissions. I started by plotting the number of intakes per month against the months of the year.

#Beginning with 2014, the first yearly intake record included in this analysis, the number of wildlife admissions per month was evaluated to identify any trends in admissions numbers throughout the year.

```{r figureone, echo=FALSE}
#plotting the intakes each month against months in the year 2014
updated_14_intakebymonth <- ggplot(Records_14) + aes(x = month(month, label = TRUE)) +
  geom_bar(fill = "#0099f9") +
  labs(x = "Month", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption =  element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Monthly Wildlife Admissions in 2014", caption = "Figure 1: The number of monthly admissions to the wildlife clinic in 2014.")
updated_14_intakebymonth
```
While the number of wildlife admissions per month is shown on the graph's y axis, I wanted to see the numerical totals associated with each month in a table, so I organized the 2014 data by month and counted the total number of occurrences in each month, then created a table to read that information from.

```{r, echo=FALSE}
#calculate total intakes per month in tibble for 2014 intakes
#monthly total caluclations for intakes admission 
Monthlystats_14 <- Records_14 %>%
  group_by(month) %>%
  tally()

#count monthly intakes in 2014 
Monthlystats_14 <- Records_14 %>%
  group_by(month) %>%
  summarise(count = n()) %>%
  na.omit("Monthlystats_14") %>%
  top_n(12)

#statistics of monthly 2014 admissions 
mean(Monthlystats_14$count)
#mean of monthly intakes = 177, meaning the average monthly intake in 2014 is 177 intakes per month

min(Monthlystats_14$count)
#minimum intake per month = 41, meaning the lowest number of monthly intakes in 2014 was 41 intakes in a month

max(Monthlystats_14$count)
#maximum intake per month = 458, meaning the maximum number of intakes in a month in 2014 was 458 intakes in a month

median(Monthlystats_14$count)
#median intake per month = 111, meaning of the range for monthly intakes in 2014 the middle number of intakes is 111 intakes in a month

#tibble of monthly intakes, convert numeric month format to abbreviated month 
Monthlystats_14$month <- (month.abb[Monthlystats_14$month])

#convert monthly stats 14 tibble into data frame
Monthlystats_14_table <- data.frame(Monthlystats_14)

#convert monthly stats 14 data frame into table
setDT(Monthlystats_14_table)

#check if this was sucessful in turning data frame into data table 
is.data.table(Monthlystats_14_table)

#rename columns in data table
setnames(Monthlystats_14_table, c("month","count"), c("Month", "Admissions"))

#use flextable package
Monthlystats_14_tableflex <- flextable(Monthlystats_14_table)

#format table
Monthlystats_14_tableflex <- theme_vanilla(Monthlystats_14_tableflex)
Monthlystats_14_tableflex <- border_outer(Monthlystats_14_tableflex)
Monthlystats_14_tableflex <- border_inner_v(Monthlystats_14_tableflex)
Monthlystats_14_tableflex <- set_caption(Monthlystats_14_tableflex, "Table 1: The number of monthly admissions to the wildlife clinic in 2014.")
```

```{r, echo=FALSE}
Monthlystats_14_tableflex
```

#In 2014, the month of June had the highest number of intakes in a single month, with 458 total intakes, followed by July, which had the second highest number of intakes per month for the year, with 374 total intakes. For the entire year, the average number of intakes per month was 177, with a median value of 111 intakes per month. In the early fall of 2014, the number of intakes fell to only 220 in September, then dropped dramatically through October and November, reaching a low point in the winter with only 41 intakes in December and 56 in January. These patterns indicate that the number of wildlife admissions to this facility follows seasonal trends. 

The following step in the 2014 analysis was to identify the most common reasons for clinic admission in 2014. The goal was to use the top reasons for admission to the clinic in 2014 to represent the most common injuries suffered by wild animals that year, particularly during the peak months for wildlife admissions, as indicated by monthly intake analyses. To begin, I organized the data by date and admission reason, and then calculated the total number of intakes for each admission reason. Following that, I narrowed my focus by selecting only the top five most common reasons for clinic admission that year and plotting their frequency in terms of clinic intakes.

```{r, echo=FALSE}
#begin analysis for determining top reasons for admission

#check class for cause for admission column before replacing values
class(Records_14$cause_for_admission)

#replace values to fix spelling and grammar errors
#replace "orphaned" with "Orphaned" to match other variables of the same kind
Records_14$cause_for_admission <- gsub('orphaned', 'Orphaned', Records_14$cause_for_admission)

#replace "injured" with "Unkonwn trauma" to match other variables of the same kind
Records_14$cause_for_admission <- gsub('Injured', 'Unknown trauma', Records_14$cause_for_admission)

#top reasons for admission 2014 
admissions_2014 <- Records_14 %>%
  group_by(date, cause_for_admission) %>%
  tally()

#count frequency of reasons for admission in 2014
admissions_2014 <- na.omit("admissions_2014") 
admissions_2014_count <- Records_14 %>%
  group_by(cause_for_admission) %>%
  summarise(count = n())


#count top 5 common reasons for admission in 2014
admissions_2014 <- na.omit("admissions_2014") 
admissions_2014 <- Records_14 %>%
  group_by(cause_for_admission) %>%
  summarise(count = n()) %>%
  na.omit("admissions_2014") %>%
  top_n(5) 
```

Next, I organized this information into a table that included the top five most common reasons for wildlife intake to the clinic in 2014, the total number of wildlife admissions that accounted for each, and the percentage that each attributed to the total number of intakes in 2014

```{r, echo=FALSE}
#making the top5reasonsforadmission2014 in a table format
#make table with top 5 reasons, count, and percentage of total 

#arrange data frame into descending order
admissions_2014 <- admissions_2014 %>%
  arrange(desc(count))

#add percent to admissions14 table
admissions_2014 <- admissions_2014 %>%
  mutate(admissions_2014, Percent_total_intakes = count / sum (admissions_2014_count$count) * 100) 

#convert admissions 14 tibble into data frame
top5_rzn14_table <- data.frame(admissions_2014)

#convert admissions 14 data frame into table
setDT(top5_rzn14_table)

#check if this was sucessful in turning data frame into data table 
is.data.table(top5_rzn14_table)

#rename columns in data table
setnames(top5_rzn14_table, c("cause_for_admission","count", "Percent_total_intakes"), 
         c("Reason Admitted", "Number of Admissions", "Percent of Total Admissions"))

#round percent column to whole numbers
top5_rzn14_table$`Percent of Total Admissions` <- round(top5_rzn14_table$`Percent of Total Admissions`)

#use flextable package
top5_rzn14_tableflex <- flextable(top5_rzn14_table)

#format table
#adjust dimensions to autofit
top5_rzn14_tableflex <- top5_rzn14_tableflex %>%
  autofit(add_w = 0, add_h = 0)

#format table
top5_rzn14_tableflex <- theme_vanilla(top5_rzn14_tableflex)
top5_rzn14_tableflex <- border_outer(top5_rzn14_tableflex)
top5_rzn14_tableflex <- set_caption(top5_rzn14_tableflex, "Table 2: The total number of admissions and percentage of total admissions for each of the top five reasons for admission in 2014.")
top5_rzn14_tableflex

#stats for top reasons for admission data (2014)
sum(top5_rzn14_table$`Number of Admissions`)
#top 5 reasons account for 1711 intakes of the 2133 total admissions for the year 2014
#top 5 reasons for intake account for 80% of all intakes that year
```

#The top five primary reasons for admission to the wildlife clinic in 2014 accounted for 1,711 of the 2,133 total intakes in that year, or 80 percent of all intakes in 2014. As a result, the five most common reasons for clinic intake accounted for more than three-quarters of all intakes to the clinic in 2014. As shown in the table above, the most common reason for admission in 2014 was wildlife being orphaned (38%), followed by cases of unknown injuries or trauma (29%), attacks on wildlife by domestic cats (6%), incidents involving animal-vehicle collisions (4%), and attacks on wildlife by domestic dogs (2%).

After obtaining data on the total number of animals admitted to the clinic in 2014, as well as the top five reasons for admission or the most common sources of wildlife injury that year, I began my investigation into which species were most severely impacted and thus most frequently admitted to the clinic in 2014.

I began this section of the analysis in a similar manner to the approach for identifying the top reasons for admission, by organizing the data by the variable of interest. In this case, I organized the data by the name of the species for each animal admitted to the clinic and then totaled the intakes for each. I then narrowed my focus by selecting for only the top five most common species admitted to the clinic in 2014. This information was then used to plot the total number of admissions for each of the top five most common species admitted that year.
```{r, echo=FALSE}
#begin analysis for top 5 most common species admitted in 2014 
#count top 5 most common species admitted in 2014

#top species admitted 2014 
topspecies_2014 <- Records_14 %>%
  group_by(species) %>%
  tally()

#count freq of all different species admitted in 2014
topspecies_2014 <- na.omit("topspecies_2014") 
topspecies_2014_count <- Records_14 %>%
  group_by(species) %>%
  summarise(count = n())

#count top 5 most common species admitted in 2014
topspecies_2014 <- na.omit("topspecies_2014") 
topspecies_2014 <- Records_14 %>%
  group_by(species) %>%
  summarise(count = n()) %>%
  na.omit("topspecies_2014") %>%
  top_n(5)
topspecies_2014

```

```{r, echo=FALSE}
#plot top 5 species admitted in 2014
#plot in descending order on x axis
#\n seperates label or title into next line
#added formatting code to axis, title, caption and labels

top5_species14_plot <- ggplot(data = topspecies_2014, aes(x = reorder(species, -count), y = count)) + 
  geom_bar(stat = "identity", fill = "#CC3300") +
  labs(x = "Species", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5),  plot.caption = element_text(face = "bold", hjust = 0.5, vjust = -0.8)) +
  theme(axis.text.x = element_text(size = 7, face = "bold", vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Top Five Most Frequently Admitted Species in 2014", caption = "Figure 3: The top five most frequently admitted species in 2014\n and the total number of clinic admissions for each.")
saveRDS(top5_species14_plot, file = "top5_species14_plot.RDS")
save(top5_species14_plot, file = "top5_species14_plot.RData")
top5_species14_plot

```

In a manner similar to the previous sections of this analysis, the next step in this section involved reorganizing this data into a table to view the total number of admissions and percent of total admissions for each of the top five most frequently admitted species to the clinic in 2014.

```{r, echo=FALSE}
#making top 5 species table with top 5 species, number admissions (count), and percent total admissions

#arrange tibble into descending order
topspecies_2014 <- topspecies_2014 %>%
  arrange(desc(count))

#add percent to tibble
topspecies_2014 <- topspecies_2014 %>%
  mutate(topspecies_2014, 'Percent of Total Admissions' = count / sum (topspecies_2014_count$count) * 100) 
topspecies_2014

#convert top species tibble into data frame
top5_species14_table <- data.frame(topspecies_2014)

#convert admissions 14 data frame into table
setDT(top5_species14_table)


#check if this was sucessful in turning data frame into data table 
is.data.table(top5_species14_table)

#rename columns in data table
setnames(top5_species14_table, c("species","count", "Percent.of.Total.Admissions"), 
         c("Species", "Number of Admissions", "Percent of Total Admissions"))

#round percent column to whole numbers
top5_species14_table$`Percent of Total Admissions` <- round(top5_species14_table$`Percent of Total Admissions`)

#use flextable package
top5_species14_tableflex <- flextable(top5_species14_table)

#format table
#adjust dimensions to autofit
top5_species14_tableflex <- top5_species14_tableflex %>%
  autofit(add_w = 0, add_h = 0)

#format table
top5_species14_tableflex <- theme_vanilla(top5_species14_tableflex)
top5_species14_tableflex <- border_outer(top5_species14_tableflex)
top5_species14_tableflex <- set_caption(top5_species14_tableflex, "Table 3: The number of admissions and percent of total admissions for the top five most frequently admitted species in 2014.")
```

```{r, echo=FALSE}
top5_species14_tableflex
```


```{r, echo=FALSE}
#stats for top species (2014)

#sum of admissions from all top 5 common species combined
sum(top5_species14_table$'Number of Admissions')
#961 admissions
#961 of 2133 total admissions in 2014 are from top 5 species,
#top 5 species = 45% of all admissions in 2014

#compare admissions from top 5 species with total number of species admitted in 2014
Number_diffspecies_2014_forstats<- Records_14 %>%
  count(species)
#168
#168 different species admitted in 2014
#168 species total. Top 5 most commonly admitted species = almost 50% of all admissions
```
#According to this statistical analysis, the top five most commonly admitted species accounted for 961 of the 2,133 total intakes in 2014, or 45 percent of all intakes in 2014. The Eastern Cotton Tail was the most frequently admitted species in 2014, accounting for 16% of all admissions, followed by the Eastern Grey Squirrel (10%), the House Sparrow (8%), the American Robin (8%), and the Rock Dove (3%). According to this data, of the 168 different species admitted to the clinic in 2014, the top five most frequently admitted species accounted for nearly half of all admissions in that year.

After identifying the top five reasons for admission, top five species commonly admitted, and total monthly admissions for the year 2014, the analysis for the individual 2014 yearly data was completed. I then moved on to the 2016 intake record to begin the individual yearly data analysis for that year. The raw data file for the 2016 records was organized in the same manner as described above for the 2014 original data, and the first step also included determining the total number of monthly admissions to the clinic in 2016.  The next steps involved determining the top five most common reasons for intake and the most commonly admitted species that year.

```{r, echo=FALSE}
#Begin 2016 data analysis
#repeat steps above for 2016, clean, # of intakes, top 5 admission reasons, top 5 species admitted

#extract important columns only
Records_16<- select(X2016Records, c(1,2,3,8,9))

#clean data 2016
Records_16 <- rename(Records_16, date = "Intake Date", species_class = "Species Class", species = "Species", city = "City Found", cause_for_admission = "Cause for Admission")

#change date format for 2016 
Records_16 <- Records_16 %>%
mutate(date = mdy(date))

#Add month column from date column for 2016
Records_16$month <- month(Records_16$date)

#remove NA for 2016 data
Records_16 <- Records_16 %>%
  filter(!is.na(date))

#plotting the intakes each month against months in the year 2016
Intakebymonth_16 <- ggplot(Records_16) + aes(x = month(month, label = TRUE)) +
  geom_bar(fill = "#0099f9") +
  labs(x = "Month", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption =  element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Monthly Wildlife Admissions in 2016", caption = "Figure 4: The number of monthly admissions to the wildlife clinic in 2016.")
```

```{r, echo=FALSE}
Intakebymonth_16
```

```{r, echo=FALSE}
#2016 intake by month data into table 

#calculate total intakes per month in tibble for 2016 intakes
#monthly total calculations for intakes admission 
Monthlystats_16 <- Records_16 %>%
  group_by(month) %>%
  tally()

#count monthly intakes in 2016 
Monthlystats_16 <- Records_16 %>%
  group_by(month) %>%
  summarise(count = n()) %>%
  na.omit("Monthlystats_16") %>%
  top_n(12)

#statistics of monthly 2016 admissions 
mean(Monthlystats_16$count)
#mean of monthly intakes = 233, meaning the average monthly intake in 2016 is 233 intakes per month

min(Monthlystats_16$count)
#minimum intake per month = 38, meaning the lowest number of monthly intakes in 2016 was 38 intakes in a month

max(Monthlystats_16$count)
#maximum intake per month = 607, meaning the maxmimum number of intakes in a month in 2016 was 607 intakes in a month

median(Monthlystats_16$count)
#median intake per month = 185, meaning of the range for monthly intakes in 2016 the middle number of intakes is 185 intakes in a month


#tibble of monthly intakes, convert numeric month format to abbreviated month 
Monthlystats_16$month <- (month.abb[Monthlystats_16$month])

#convert monthly stats 16 tibble into data frame
Monthlystats_16_table <- data.frame(Monthlystats_16)

#convert monthly stats 16 data frame into table
setDT(Monthlystats_16_table)

#check if this was sucessful in turning data frame into data table 
is.data.table(Monthlystats_16_table)

#rename columns in data table
setnames(Monthlystats_16_table, c("month","count"), c("Month", "Admissions"))
```


```{r, echo=FALSE}
#use flextable package
Monthlystats_16_tableflex <- flextable(Monthlystats_16_table)

#format table
Monthlystats_16_tableflex <- theme_vanilla(Monthlystats_16_tableflex)
Monthlystats_16_tableflex <- border_outer(Monthlystats_16_tableflex)
Monthlystats_16_tableflex <- border_inner_v(Monthlystats_16_tableflex)
Monthlystats_16_tableflex <- set_caption(Monthlystats_16_tableflex, "Table 4: The number of monthly admissions to the wildlife clinic in 2016.")
```

```{r, echo=FALSE}
Monthlystats_16_tableflex
```


#Monthly admissions trends in 2016 appeared to follow seasonal patterns similar to those observed in 2014. Again, clinic admissions peaked between May and August, with June and July remaining the busiest months for wildlife admissions. In 2016, the maximum number of monthly admissions was 607 total admissions, the lowest number of monthly admissions was 38 total admissions, and the average number of monthly admissions was 233, with 185 representing the median value of the total range of intakes per month. June had a total of 607 intakes, followed by July with 441 intakes and May with a close number of intakes, 432 total intakes for the month. From late summer to early fall, the number of admissions continued to fall until it reached its lowest point of the year in the winter months of December and January, with only 38 and 48 intakes, respectively. Following the analysis of monthly admissions trends in 2016, I began to investigate the top five most common reasons for clinic admission in 2016.

```{r, echo=FALSE}
#begin analysis for determining top reasons for admission 2016

#check class for cause for admission column before replacing values
class(Records_16$cause_for_admission)

#replace values to fix spelling and grammar errors
#replace "Orphaned Juvenile" with "Orphaned" to match other variables of the same kind
Records_16$cause_for_admission <- gsub('Orphaned juvenile', 'Orphaned', Records_16$cause_for_admission)

#replace "injury" with "Unknown trauma" to match other variables of the same kind
Records_16$cause_for_admission <- gsub('Injury', 'Unknown trauma', Records_16$cause_for_admission)

#replace "HBC" with "Hit by car" to match other variables of the same kind
Records_16$cause_for_admission <- gsub('HBC', 'Hit by car', Records_16$cause_for_admission)

#replace "Cat caught" with "Cat attack" to match other variables of the same kind
Records_16$cause_for_admission <- gsub('Cat caught', 'Cat attack', Records_16$cause_for_admission)

#top reasons for admission 2016 
admissions_2016 <- Records_16 %>%
  group_by(date, cause_for_admission) %>%
  tally()

#count freq of reasons for admission in 2016
admissions_2016 <- na.omit("admissions_2016") 
admissions_2016_count <- Records_16 %>%
  group_by(cause_for_admission) %>%
  summarise(count = n())

#count top 5 common reasons for admission in 2016
admissions_2016 <- na.omit("admissions_2016") 
admissions_2016 <- Records_16 %>%
  group_by(cause_for_admission) %>%
  summarise(count = n()) %>%
  na.omit("admissions_2016") %>%
  top_n(5) 
admissions_2016

#plot top 5 common reasons for admission in 2016
#plot in descending order on x axis
#\n seperates label or title into next line
#added formatting code to axis, title, caption and labels
top5_admissions16_plot <- ggplot(data = admissions_2016, aes(x = reorder(cause_for_admission, -count), y = count)) + 
  geom_bar(stat = "identity", fill = "#69b3a2") +
  labs(x = "Reason for Admission", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption = element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Top Five Reasons for Admission in 2016", caption = "Figure 5: The total number of admissions for each of the \n top five reasons for admission to the wildlife clinic in 2016")
```
```{r, echo=FALSE}
plot(top5_admissions16_plot)
```

```{r, echo=FALSE}
#making the top5reasonsforadmission2016 in a table format
#make table with top 5 reasons, count, and percentage of total 

#arrange data frame into descending order
admissions_2016 <- admissions_2016 %>%
  arrange(desc(count))
#add percent to admissions16 table
admissions_2016 <- admissions_2016 %>%
  mutate(admissions_2016, Percent_total_intakes = count / sum (admissions_2016_count$count) * 100) 
admissions_2016

#convert admissions 16 tibble into data frame
top5_rzn16_table <- data.frame(admissions_2016)

#convert admissions 16 data frame into table
setDT(top5_rzn16_table)

#check if this was sucessful in turning data frame into data table 
is.data.table(top5_rzn16_table)

#rename columns in data table
setnames(top5_rzn16_table, c("cause_for_admission","count", "Percent_total_intakes"), 
         c("Reason Admitted", "Number of Admissions", "Percent of Total Admissions"))

#round percent column to whole numbers
top5_rzn16_table$`Percent of Total Admissions` <- round(top5_rzn16_table$`Percent of Total Admissions`)

#use flextable package
top5_rzn16_tableflex <- flextable(top5_rzn16_table)

#format table
#adjust dimensions to autofit
top5_rzn16_tableflex <- top5_rzn16_tableflex %>%
  autofit(add_w = 0, add_h = 0)

#format table
top5_rzn16_tableflex <- theme_vanilla(top5_rzn16_tableflex)
top5_rzn16_tableflex <- border_outer(top5_rzn16_tableflex)
top5_rzn16_tableflex<- set_caption(top5_rzn16_tableflex, "Table 5: The total number of admissions and percentage of total admissions for each of the top five reasons for admission in 2016.")

#stats for top reasons for admission data (2016)
sum(top5_rzn16_table$`Number of Admissions`)
#top 5 reasons account for 1064 intakes of the 2797 total admissions for the year 2016
#top 5 reasons for intake account for 38% of all intakes that year
```

```{r, echo=FALSE}
top5_rzn16_tableflex
```
#In 2016, the top five primary reasons for admission to the wildlife clinic accounted for 1,064 of the 2,797 total intakes, or 38% of all intakes. According to the table above, the most common reason for admission in 2016 was wildlife orphanage (27%), followed by cases of unknown injuries or trauma (5%), attacks on wildlife by domestic cats (3%), incidents involving animal-vehicle collisions (2%), and injuries to wildlife resulting in broken wings (1%).

```{r, echo=FALSE}
#begin analysis for top 5 most common species admitted in 2016
#count top 5 most common species admitted in 2016

#top species admitted 2016 
topspecies_2016<- Records_16 %>%
  group_by(species) %>%
  tally()

#count freq of all different species admitted in 2016
topspecies_2016 <- na.omit("topspecies_2016") 
topspecies_2016_count <- Records_16 %>%
  group_by(species) %>%
  summarise(count = n())

#count top 5 most common species admitted in 2016
topspecies_2016 <- na.omit("topspecies_2016") 
topspecies_2016 <- Records_16 %>%
  group_by(species) %>%
  summarise(count = n()) %>%
  na.omit("topspecies_2016") %>%
  top_n(5)
topspecies_2016

#plot top 5 species admitted in 2016
#plot in descending order on x axis
#\n seperates label or title into next line
#added formatting code to axis, title, caption and labels

top5_species16_plot <- ggplot(data = topspecies_2016, aes(x = reorder(species, -count), y = count)) + 
  geom_bar(stat = "identity", fill = "#CC3300") +
  labs(x = "Species", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5),  plot.caption = element_text(face = "bold", hjust = 0.5, vjust = -0.8)) +
  theme(axis.text.x = element_text(size = 7, face = "bold", vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Top Five Most Frequently Admitted Species in 2016", caption = "Figure 3: The top five most frequently admitted species in 2016\n and the total number of clinic admissions for each.")
saveRDS(top5_species16_plot, file = "top5_species16_plot.RDS")
save(top5_species16_plot, file = "top5_species16_plot.RData")
```


```{r, echo=FALSE}
top5_species16_plot
```

```{r, echo=FALSE}
#making top 5 species table with top 5 species, number admissions (count), and percent total admissions

#arrange tibble into descending order
topspecies_2016 <- topspecies_2016 %>%
  arrange(desc(count))

#add percent to tibble
topspecies_2016 <- topspecies_2016 %>%
  mutate(topspecies_2016, 'Percent of Total Admissions' = count / sum (topspecies_2016_count$count) * 100) 
topspecies_2016

#convert top species tibble into data frame
top5_species16_table <- data.frame(topspecies_2016)

#convert admissions 16 data frame into table
setDT(top5_species16_table)


#check if this was sucessful in turning data frame into data table 
is.data.table(top5_species16_table)

#rename columns in data table
setnames(top5_species16_table, c("species","count", "Percent.of.Total.Admissions"), 
         c("Species", "Number of Admissions", "Percent of Total Admissions"))

#round percent column to whole numbers
top5_species16_table$`Percent of Total Admissions` <- round(top5_species16_table$`Percent of Total Admissions`)

#use flextable package
top5_species16_tableflex <- flextable(top5_species16_table)

#format table
#adjust dimensions to autofit
top5_species16_tableflex <- top5_species16_tableflex %>%
  autofit(add_w = 0, add_h = 0)

#format table
top5_species16_tableflex <- theme_vanilla(top5_species16_tableflex)
top5_species16_tableflex <- border_outer(top5_species16_tableflex)
top5_species16_tableflex <- set_caption(top5_species16_tableflex, "Table 3: The number of admissions and percent of total admissions for the top five most frequently admitted species in 2016.")
```

```{r, echo=FALSE}
top5_species16_tableflex
```


```{r, echo=FALSE}
#stats for top species (2016)

#sum of admissions from all top 5 common species combined
sum(top5_species16_table$'Number of Admissions')
#1069 admissions
#1069 of 2797 total admissions in 2016 are from top 5 species,
#top 5 species = 38% of all admissions in 2016

#compare admissions from top 5 species with total number of species admitted in 2016
Number_diffspecies_2016_forstats<- Records_16 %>%
  count(species)
Number_diffspecies_2016_forstats
#272
#272 different species admitted in 2016
#272 species total. Top 5 most commonly admitted species = almost 40% of all admissions

```

#According to this statistical analysis, the top five most commonly admitted species accounted for 1,069 of the 2,797 total intakes in 2016, or almost 40 percent of all intakes in 2016. The Eastern Cotton Tail was once again the most frequently admitted species in this year,  accounting for 13% of all admissions, followed by the Eastern Grey Squirrel (9%), the House Sparrow (7%), the American Robin (6%), and the Mourning Dove (3%). According to this data, of the 272 different species admitted to the clinic in 2016, the top five most frequently admitted species accounted for almost forty percent of all admissions in that year.


##The records from 2018 were the next yearly intake records included in this analysis. Following the cleaning and organization of this file as previously described, the records were analyzed again for the total number of monthly admissions to the clinic in 2018, the top five most common reasons for intake, and the most commonly admitted species that year.
```{r, echo=FALSE}
#Begin 2018 data analysis
#repeat steps above for 2018, clean, # of intakes, top 5 admission reasons, top 5 species admitted

#extract important columns only
Records_18<- select(X2018Records, c(1,2,3,8,9))

#clean data 2018
Records_18 <- rename(Records_18, date = "Intake Date", species_class = "Species Class", species = "Species", city = "City Found", cause_for_admission = "Cause for Admission")

#change date format for 2018
Records_18 <- Records_18 %>%
mutate(date = mdy(date))


#Add month column from date column for 2018
Records_18$month <- month(Records_18$date)

#remove NA for 2018 data
Records_18 <- Records_18 %>%
  filter(!is.na(date))

#plotting the intakes each month against months in the year 2018
Intakebymonth_18 <- ggplot(Records_18) + aes(x = month(month, label = TRUE)) +
  geom_bar(fill = "#0099f9") +
  labs(x = "Month", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption =  element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Monthly Wildlife Admissions in 2018", caption = "Figure 7: The number of monthly admissions to the wildlife clinic in 2018.")
```

```{r, echo=FALSE}
Intakebymonth_18
```
```{r, echo=FALSE}
#2018 intake by month data into table 

#calculate total intakes per month in tibble for 2018 intakes
#monthly total calculations for intakes admission 
Monthlystats_18 <- Records_18 %>%
  group_by(month) %>%
  tally()

#count monthly intakes in 2018 
Monthlystats_18 <- Records_18 %>%
  group_by(month) %>%
  summarise(count = n()) %>%
  na.omit("Monthlystats_18") %>%
  top_n(12)

#statistics of monthly 2018 admissions 

sum(Monthlystats_18$count)
#2626 total intakes in the year

mean(Monthlystats_18$count)
#mean of monthly intakes = 219, meaning the average monthly intake in 2018 is 219 intakes per month

min(Monthlystats_18$count)
#minimum intake per month = 48 , meaning the lowest number of monthly intakes in 2018 was 48  intakes in a month

max(Monthlystats_18$count)
#maximum intake per month = 507, meaning the maxmimum number of intakes in a month in 2018 was 507 intakes in a month

median(Monthlystats_18$count)
#median intake per month = 151, meaning of the range for monthly intakes in 2018 the middle number of intakes is 151 intakes in a month


#tibble of monthly intakes, convert numeric month format to abbreviated month 
Monthlystats_18$month <- (month.abb[Monthlystats_18$month])

#convert monthly stats 18 tibble into data frame
Monthlystats_18_table <- data.frame(Monthlystats_18)

#convert monthly stats 18 data frame into table
setDT(Monthlystats_18_table)

#check if this was sucessful in turning data frame into data table 
is.data.table(Monthlystats_18_table)

#rename columns in data table
setnames(Monthlystats_18_table, c("month","count"), c("Month", "Admissions"))

#use flextable package
Monthlystats_18_tableflex <- flextable(Monthlystats_18_table)

#format table
Monthlystats_18_tableflex <- theme_vanilla(Monthlystats_18_tableflex)
Monthlystats_18_tableflex <- border_outer(Monthlystats_18_tableflex)
Monthlystats_18_tableflex <- border_inner_v(Monthlystats_18_tableflex)
Monthlystats_18_tableflex <- set_caption(Monthlystats_18_tableflex, "Table 7: The number of monthly admissions to the wildlife clinic in 2018.")

```

```{r, echo=FALSE}
Monthlystats_18_tableflex

```
#Monthly admissions trends in 2018 followed seasonal patterns as well. Admission numbers peaked between May and August, with June being the busiest month for wildlife admissions and May coming in second, closely followed by July. The highest monthly admissions totaled 507 total admissions, the lowest monthly admissions totaled 46 total admissions, and the average monthly admissions totaled 218 total admissions, with 151 representing the median value of the total range of intakes per month. The month of June had the most intakes, 507, followed by May and July, which had 414 and 412 intakes, respectively. In contrast to previous years, the number of intakes remained close to its peak throughout the summer, with intakes falling just below 400 in August. Following the end of the summer, admissions fell to their lowest point of the year in February.
```{r, echo=FALSE}
#begin analysis for determining top reasons for admission 2018

#check class for cause for admission column before replacing values
class(Records_18$cause_for_admission)

#replace values to fix spelling and grammar errors
#replace "Orphaned Juvenile" with "Orphaned" to match other variables of the same kind
Records_18$cause_for_admission <- gsub('Orphaned juvenile', 'Orphaned', Records_18$cause_for_admission)

#replace "injury" with "Unknown trauma" to match other variables of the same kind
Records_18$cause_for_admission <- gsub('Injury', 'Unknown trauma', Records_18$cause_for_admission)

replace "HBC" with "Hit by car" to match other variables of the same kind
Records_18$cause_for_admission <- gsub('HBC', 'Hit by car', Records_18$cause_for_admission)

#replace "Cat caught" with "Cat attack" to match other variables of the same kind
Records_18$cause_for_admission <- gsub('Cat caught', 'Cat attack', Records_18$cause_for_admission)

#top reasons for admission 2018
admissions_2018 <- Records_18 %>%
  group_by(date, cause_for_admission) %>%
  tally()

#count freq of reasons for admission in 2018
admissions_2018 <- na.omit("admissions_2018") 
admissions_2018_count <- Records_18 %>%
  group_by(cause_for_admission) %>%
  summarise(count = n())

#count top 5 common reasons for admission in 2018
admissions_2018 <- na.omit("admissions_2018") 
admissions_2018 <- Records_18 %>%
  group_by(cause_for_admission) %>%
  summarise(count = n()) %>%
  na.omit("admissions_2018") %>%
  top_n(5) 
admissions_2018

#plot top 5 common reasons for admission in 2018
#plot in descending order on x axis
#\n seperates label or title into next line
#added formatting code to axis, title, caption and labels
top5_admissions18_plot <- ggplot(data = admissions_2018, aes(x = reorder(cause_for_admission, -count), y = count)) + 
  geom_bar(stat = "identity", fill = "#69b3a2") +
  labs(x = "Reason for Admission", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption = element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Top Five Reasons for Admission in 2018", caption = "Figure 8: The total number of admissions for each of the \n top five reasons for admission to the wildlife clinic in 2018")

```

```{r, echo=FALSE}
top5_admissions18_plot

```
```{r, echo=FALSE}
#making the top5reasonsforadmission2018 in a table format
#make table with top 5 reasons, count, and percentage of total 

#arrange data frame into descending order
admissions_2018 <- admissions_2018 %>%
  arrange(desc(count))
#add percent to admissions18 table
admissions_2018 <- admissions_2018 %>%
  mutate(admissions_2018, Percent_total_intakes = count / sum (admissions_2018_count$count) * 100) 
admissions_2018

#convert admissions 18 tibble into data frame
top5_rzn18_table <- data.frame(admissions_2018)

#convert admissions 18 data frame into table
setDT(top5_rzn18_table)

#check if this was sucessful in turning data frame into data table 
is.data.table(top5_rzn18_table)

#rename columns in data table
setnames(top5_rzn18_table, c("cause_for_admission","count", "Percent_total_intakes"), 
         c("Reason Admitted", "Number of Admissions", "Percent of Total Admissions"))

#round percent column to whole numbers
top5_rzn18_table$`Percent of Total Admissions` <- round(top5_rzn18_table$`Percent of Total Admissions`)

#use flextable package
top5_rzn18_tableflex <- flextable(top5_rzn18_table)

#format table
#adjust dimensions to autofit
top5_rzn18_tableflex <- top5_rzn18_tableflex %>%
  autofit(add_w = 0, add_h = 0)

#format table
top5_rzn18_tableflex <- theme_vanilla(top5_rzn18_tableflex)
top5_rzn18_tableflex <- border_outer(top5_rzn18_tableflex)
top5_rzn18_tableflex<- set_caption(top5_rzn18_tableflex, "Table 8: The total number of admissions and percentage of total admissions for each of the top five reasons for admission in 2018.")

#stats for top reasons for admission data (2018)
sum(top5_rzn18_table$`Number of Admissions`)
#784
#top 5 reasons account for 784  intakes of the 2626 total admissions for the year 2018
#top 5 reasons for intake account for 29% of all intakes in 2018
```

```{r, echo=FALSE}
top5_rzn18_tableflex

```
#The top five primary reasons for admission to the wildlife clinic accounted for 784 of the 2,626 total intakes in 2018, or 29 percent of all intakes. The most common reason for admission in 2018 was wildlife orphanage (20%), followed by cases of unknown injuries or trauma (5%), attacks on wildlife by domestic cats (2%), injuries to wildlife resulting in broken wings (1%), and incidents involving animal-vehicle collisions (1%).
```{r, echo=FALSE}
#begin analysis for top 5 most common species admitted in 2018
#count top 5 most common species admitted in 2018

#top species admitted 2018
topspecies_2018<- Records_18 %>%
  group_by(species) %>%
  tally()

#count freq of all different species admitted in 2018
topspecies_2018 <- na.omit("topspecies_2018") 
topspecies_2018_count <- Records_18 %>%
  group_by(species) %>%
  summarise(count = n())

#count top 5 most common species admitted in 2018
topspecies_2018 <- na.omit("topspecies_2018") 
topspecies_2018 <- Records_18 %>%
  group_by(species) %>%
  summarise(count = n()) %>%
  na.omit("topspecies_2018") %>%
  top_n(5)
topspecies_2018

#plot top 5 species admitted in 2018
#plot in descending order on x axis
#\n seperates label or title into next line
#added formatting code to axis, title, caption and labels

top5_species18_plot <- ggplot(data = topspecies_2018, aes(x = reorder(species, -count), y = count)) + 
  geom_bar(stat = "identity", fill = "#CC3300") +
  labs(x = "Species", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5),  plot.caption = element_text(face = "bold", hjust = 0.5, vjust = -0.8)) +
  theme(axis.text.x = element_text(size = 7, face = "bold", vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Top Five Most Frequently Admitted Species in 2018", caption = "Figure 9: The top five most frequently admitted species in 2018\n and the total number of clinic admissions for each.")
```

```{r, echo=FALSE}
top5_species18_plot

```
```{r, echo=FALSE}
#making top 5 species table with top 5 species, number admissions (count), and percent total admissions

#arrange tibble into descending order
topspecies_2018 <- topspecies_2018 %>%
  arrange(desc(count))

#add percent to tibble
topspecies_2018 <- topspecies_2018 %>%
  mutate(topspecies_2018, 'Percent of Total Admissions' = count / sum (topspecies_2018_count$count) * 100) 
topspecies_2018

#convert top species tibble into data frame
top5_species18_table <- data.frame(topspecies_2018)

#convert admissions 18 data frame into table
setDT(top5_species18_table)


#check if this was sucessful in turning data frame into data table 
is.data.table(top5_species18_table)

#rename columns in data table
setnames(top5_species18_table, c("species","count", "Percent.of.Total.Admissions"), 
         c("Species", "Number of Admissions", "Percent of Total Admissions"))

#round percent column to whole numbers
top5_species18_table$`Percent of Total Admissions` <- round(top5_species18_table$`Percent of Total Admissions`)

#use flextable package
top5_species18_tableflex <- flextable(top5_species18_table)

#format table
#adjust dimensions to autofit
top5_species18_tableflex <- top5_species18_tableflex %>%
  autofit(add_w = 0, add_h = 0)

#format table
top5_species18_tableflex <- theme_vanilla(top5_species18_tableflex)
top5_species18_tableflex <- border_outer(top5_species18_tableflex)
top5_species18_tableflex <- set_caption(top5_species18_tableflex, "Table 9: The number of admissions and percent of total admissions for the top five most frequently admitted species in 2018.")
```

```{r, echo=FALSE}
top5_species18_tableflex

```

```{r, echo=FALSE}
#stats for top species (2018)

#sum of admissions from all top 5 common species combined
sum(top5_species18_table$'Number of Admissions')
#1186 admissions
#1186 of 2626 total admissions in 2018 are from top 5 species,
#top 5 species = 45% of all admissions in 2018

#compare admissions from top 5 species with total number of species admitted in 2018
Number_diffspecies_2018_forstats<- Records_18 %>%
  count(species)
Number_diffspecies_2018_forstats
#199
#199 different species admitted in 2018
#199 species total. Top 5 most commonly admitted species = almost 45% of all admissions


```
#The top five most commonly admitted species accounted for 1,186 of the total 2,626 admissions in 2018, or 45 percent of all admissions in 2018. The Eastern Cotton Tail was the most frequently admitted species this year, accounting for 17% of all admissions, followed by the Eastern Grey Squirrel (11%), the House Sparrow (7%), the American Robin (6%), and the Herring Gull (4%). According to this data, the top five most frequently admitted species accounted for 45 percent of all admissions in 2018 among the 199 different species admitted to the clinic in that year.


#The next yearly intake records included in this analysis were those from 2019. Following the previously described process of cleaning and organizing the raw data in the 2019 file, the records were again analyzed for the total number of monthly admissions to the clinic in 2019, the top five most common reasons for intake, and the most commonly admitted species that year.
```{r, echo=FALSE}
#Begin 2019 data analysis
#repeat steps above for 2019, clean, # of intakes, top 5 admission reasons, top 5 species admitted

#extract important columns only
Records_19<- select(X2019Records, c(1,2,3,8,9))

#clean data 2019
Records_19 <- rename(Records_19, date = "Intake Date", species_class = "Species Class", species = "Species", city = "City Found", cause_for_admission = "Cause for Admission")

#change date format for 2019
Records_19 <- Records_19 %>%
mutate(date = mdy(date))

#Add month column from date column for 2019
Records_19$month <- month(Records_19$date)

#remove NA for 2019 data
Records_19 <- Records_19 %>%
  filter(!is.na(date))

#plotting the intakes each month against months in the year 2019
Intakebymonth_19 <- ggplot(Records_19) + aes(x = month(month, label = TRUE)) +
  geom_bar(fill = "#0099f9") +
  labs(x = "Month", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption =  element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Monthly Wildlife Admissions in 2019", caption = "Figure 10: The number of monthly admissions to the wildlife clinic in 2019.")
```

```{r, echo=FALSE}
Intakebymonth_19
```

```{r, echo=FALSE}
#2019 intake by month data into table 

#calculate total intakes per month in tibble for 2019 intakes
#monthly total calculations for intakes admission 
Monthlystats_19 <- Records_19 %>%
  group_by(month) %>%
  tally()

#count monthly intakes in 2019
Monthlystats_19 <- Records_19 %>%
  group_by(month) %>%
  summarise(count = n()) %>%
  na.omit("Monthlystats_19") %>%
  top_n(12)

#statistics of monthly 2019 admissions 

sum(Monthlystats_19$count)
#3014 total intakes in the year

mean(Monthlystats_19$count)
#mean of monthly intakes = 251, meaning the average monthly intake in 2019 is 251 intakes per month

min(Monthlystats_19$count)
#minimum intake per month = 62 , meaning the lowest number of monthly intakes in 2019 was 62  intakes in a month

max(Monthlystats_19$count)
#maximum intake per month = 537, meaning the maximum number of intakes in a month in 2019 was 537 intakes in a month

median(Monthlystats_19$count)
#median intake per month =184, meaning of the range for monthly intakes in 2019 the middle number of intakes is 184 intakes in a month

#tibble of monthly intakes, convert numeric month format to abbreviated month 
Monthlystats_19$month <- (month.abb[Monthlystats_19$month])

#convert monthly stats 19 tibble into data frame
Monthlystats_19_table <- data.frame(Monthlystats_19)

#convert monthly stats 19 data frame into table
setDT(Monthlystats_19_table)

#check if this was successful in turning data frame into data table 
is.data.table(Monthlystats_19_table)

#rename columns in data table
setnames(Monthlystats_19_table, c("month","count"), c("Month", "Admissions"))

#use flextable package
Monthlystats_19_tableflex <- flextable(Monthlystats_19_table)

#format table
Monthlystats_19_tableflex <- theme_vanilla(Monthlystats_19_tableflex)
Monthlystats_19_tableflex <- border_outer(Monthlystats_19_tableflex)
Monthlystats_19_tableflex <- border_inner_v(Monthlystats_19_tableflex)
Monthlystats_19_tableflex <- set_caption(Monthlystats_19_tableflex, "Table 10: The number of monthly admissions to the wildlife clinic in 2019.")
```
```{r, echo=FALSE}
Monthlystats_19_tableflex
```

#Monthly admissions in 2019 followed a seasonal pattern, as seen in previous years. Admission numbers peaked between May and August, with June being the busiest month for wildlife admissions once again, followed by July, which had the second highest admission count for the month. The highest total number of monthly admissions was 537, the lowest total number of monthly admissions was 62, and the average total number of monthly admissions was 251 total admissions, with 184 representing the median value of the total range of intakes per month. The month of June had the most intakes (537), followed by July (529). Throughout the summer, the number of intakes remained close to its peak, with intakes falling just below 500 in August. Admissions fell to their lowest point of the year in February, with 62 total intakes for the month.

```{r, echo=FALSE}
#begin analysis for determining top reasons for admission 2019

#check class for cause for admission column before replacing values
class(Records_19$cause_for_admission)

#replace values to fix spelling and grammar errors
#replace "Orphaned Juvenile" with "Orphaned" to match other variables of the same kind
Records_19$cause_for_admission <- gsub('Orphaned juvenile', 'Orphaned', Records_19$cause_for_admission)

#replace "injury" with "Unknown trauma" to match other variables of the same kind
Records_19$cause_for_admission <- gsub('Injury', 'Unknown trauma', Records_19$cause_for_admission)

#replace "HBC" with "Hit by car" to match other variables of the same kind
Records_19$cause_for_admission <- gsub('HBC', 'Hit by car', Records_19$cause_for_admission)

#replace "Cat caught" with "Cat attack" to match other variables of the same kind
Records_19$cause_for_admission <- gsub('Cat caught', 'Cat attack', Records_19$cause_for_admission)

Records_19$cause_for_admission <- gsub('Possible HBC', 'Hit by car', Records_19$cause_for_admission)
Records_19$cause_for_admission <- gsub('Unknown', 'Unknown trauma', Records_19$cause_for_admission)
Records_19$cause_for_admission <- gsub('FX wing', 'Broken wing', Records_19$cause_for_admission)
Records_19$cause_for_admission <- gsub('Back injury', 'Unknown trauma', Records_19$cause_for_admission)

Records_19$cause_for_admission [grepl("Cat", Records_19$cause_for_admission)] <- "Cat attack"
admissions_2019
#top reasons for admission 2019
admissions_2019 <- Records_19 %>%
  group_by(date, cause_for_admission) %>%
  tally()
admissions_2019

#count freq of reasons for admission in 2019
admissions_2019 <- na.omit("admissions_2019") 
admissions_2019_count <- Records_19 %>%
  group_by(cause_for_admission) %>%
  summarise(count = n())

#count top 5 common reasons for admission in 2019
admissions_2019 <- na.omit("admissions_2019") 
admissions_2019 <- Records_18 %>%
  group_by(cause_for_admission) %>%
  summarise(count = n()) %>%
  na.omit("admissions_2019") %>%
  top_n(5) 
admissions_2019

#plot top 5 common reasons for admission in 2019
#plot in descending order on x axis
#\n seperates label or title into next line
#added formatting code to axis, title, caption and labels
top5_admissions19_plot <- ggplot(data = admissions_2019, aes(x = reorder(cause_for_admission, -count), y = count)) + 
  geom_bar(stat = "identity", fill = "#69b3a2") +
  labs(x = "Reason for Admission", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption = element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Top Five Reasons for Admission in 2019", caption = "Figure 11: The total number of admissions for each of the \n top five reasons for admission to the wildlife clinic in 2019.")
top5_admissions19_plot


```
```{r, echo=FALSE}
#making the top5reasonsforadmission2019 in a table format
#make table with top 5 reasons, count, and percentage of total 

#arrange data frame into descending order
admissions_2019 <- admissions_2019 %>%
  arrange(desc(count))

#add percent to admissions19 table
admissions_2019 <- admissions_2019 %>%
  mutate(admissions_2019, Percent_total_intakes = count / sum (admissions_2019_count$count) * 100) 
admissions_2019

#convert admissions 19 tibble into data frame
top5_rzn19_table <- data.frame(admissions_2019)

#convert admissions 19 data frame into table
setDT(top5_rzn19_table)

#check if this was sucessful in turning data frame into data table 
is.data.table(top5_rzn19_table)

#rename columns in data table
setnames(top5_rzn19_table, c("cause_for_admission","count", "Percent_total_intakes"), 
         c("Reason Admitted", "Number of Admissions", "Percent of Total Admissions"))

#round percent column to whole numbers
top5_rzn19_table$`Percent of Total Admissions` <- round(top5_rzn19_table$`Percent of Total Admissions`)

#use flextable package
top5_rzn19_tableflex <- flextable(top5_rzn19_table)

#format table
#adjust dimensions to autofit
top5_rzn19_tableflex <- top5_rzn19_tableflex %>%
  autofit(add_w = 0, add_h = 0)

#format table
top5_rzn19_tableflex <- theme_vanilla(top5_rzn19_tableflex)
top5_rzn19_tableflex <- border_outer(top5_rzn19_tableflex)
top5_rzn19_tableflex <- set_caption(top5_rzn19_tableflex, "Table 11: The total number of admissions and percentage of total admissions for each of the top five reasons for admission in 2019.")
top5_rzn19_tableflex

#stats for top reasons for admission data (2019)
sum(top5_rzn19_table$`Number of Admissions`)
#784
#top 5 reasons account for 784 intakes of the 3014 total admissions for the year 2019
#top 5 reasons for intake account for 26% of all intakes in 2019

```
#In 2019, the top five primary reasons for admission to the wildlife clinic accounted for 784 of the 3014 total intakes, or 26% of all intakes. The most common reason for admission in 2019 was wildlife orphanage (17%), followed by cases of unknown injuries or trauma (5%), domestic cat attacks on wildlife (2%), wildlife injuries resulting in broken wings (1%), and incidents involving animal-vehicle collisions (1%)
```{r, echo=FALSE}
#begin analysis for top 5 most common species admitted in 2019
#count top 5 most common species admitted in 2019

#top species admitted 2019
topspecies_2019<- Records_19 %>%
  group_by(species) %>%
  tally()

#count freq of all different species admitted in 2019
topspecies_2019 <- na.omit("topspecies_2019") 
topspecies_2019_count <- Records_19 %>%
  group_by(species) %>%
  summarise(count = n())

#count top 5 most common species admitted in 2019
topspecies_2019 <- na.omit("topspecies_2019") 
topspecies_2019 <- Records_19 %>%
  group_by(species) %>%
  summarise(count = n()) %>%
  na.omit("topspecies_2019") %>%
  top_n(5)
topspecies_2019

#plot top 5 species admitted in 2019
#plot in descending order on x axis
#\n seperates label or title into next line
#added formatting code to axis, title, caption and labels

top5_species19_plot <- ggplot(data = topspecies_2019, aes(x = reorder(species, -count), y = count)) + 
  geom_bar(stat = "identity", fill = "#CC3300") +
  labs(x = "Species", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5),  plot.caption = element_text(face = "bold", hjust = 0.5, vjust = -0.8)) +
  theme(axis.text.x = element_text(size = 7, face = "bold", vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Top Five Most Frequently Admitted Species in 2019", caption = "Figure 12: The top five most frequently admitted species in 2019\n and the total number of clinic admissions for each.")
```
```{r, echo=FALSE}
top5_species19_plot
```
```{r, echo=FALSE}
#making top 5 species table with top 5 species, number admissions (count), and percent total admissions

#arrange tibble into descending order
topspecies_2019 <- topspecies_2019 %>%
  arrange(desc(count))

#add percent to tibble
topspecies_2019 <- topspecies_2019 %>%
  mutate(topspecies_2019, 'Percent of Total Admissions' = count / sum (topspecies_2019_count$count) * 100) 
topspecies_2019

#convert top species tibble into data frame
top5_species19_table <- data.frame(topspecies_2019)

#convert admissions 19 data frame into table
setDT(top5_species19_table)


#check if this was successful in turning data frame into data table 
is.data.table(top5_species19_table)

#rename columns in data table
setnames(top5_species19_table, c("species","count", "Percent.of.Total.Admissions"), 
         c("Species", "Number of Admissions", "Percent of Total Admissions"))

#round percent column to whole numbers
top5_species19_table$`Percent of Total Admissions` <- round(top5_species19_table$`Percent of Total Admissions`)

#use flextable package
top5_species19_tableflex <- flextable(top5_species19_table)

#format table
#adjust dimensions to autofit
top5_species19_tableflex <- top5_species19_tableflex %>%
  autofit(add_w = 0, add_h = 0)

#format table
top5_species19_tableflex <- theme_vanilla(top5_species19_tableflex)
top5_species19_tableflex <- border_outer(top5_species19_tableflex)
top5_species19_tableflex <- set_caption(top5_species19_tableflex, "Table 12: The number of admissions and percent of total admissions for the top five most frequently admitted species in 2019.")

#stats for top species (2019)

#sum of admissions from all top 5 common species combined
sum(top5_species19_table$'Number of Admissions')
#1400 admissions
#1400 of 3014 total admissions in 2019 are from top 5 species,
#top 5 species = 46% of all admissions in 2019

#compare admissions from top 5 species with total number of species admitted in 2019
Number_diffspecies_2019_forstats<- Records_19 %>%
  count(species)
Number_diffspecies_2019_forstats
#169
#169 different species admitted in 2019
#169 species total. Top 5 most commonly admitted species = almost 50% of all admissions


```

```{r, echo=FALSE}
top5_species19_tableflex
```

#In 2019, the top five most commonly admitted species accounted for 1,400 of the total 3,014 admissions, or 46 percent of all admissions. The Eastern Cotton Tail was the most frequently admitted species this year, accounting for 18% of all admissions, followed by the Eastern Grey Squirrel (12%), American Robin (6%), House Sparrow (5%), and Herring Gull (5%). According to this data, among the 169 different species admitted to the clinic in 2019, the top five most frequently admitted species accounted for 46 percent of all admissions.

#Following the completion of the individual yearly record analyses, the research questions were examined in a broader context. This meant examining trends over time rather than just one year. To begin, the previously created plots for monthly intakes, top reasons for admission, and top species admitted based on each set of individual yearly records were placed side by side to gain perspective on how these trends change over time.
```{r, echo=FALSE}
#start side by side comparison for all four years
#compare intakes monthly, top species, and top reasons for admission between all 4 years

#monthly intakes all years
Monthlyintakes_allyears <- grid.arrange(updated_14_intakebymonth, Intakebymonth_16, Intakebymonth_18, Intakebymonth_19, nrow = 2, top = "Monthly Admissions by Year")

#top rzns admission all years
Top5rzns_allyears <- grid.arrange(top5_admissions14_plot, top5_admissions16_plot, top5_admissions18_plot, top5_admissions19_plot, nrow = 2, top = "Top Five Reasons for Admission by Year")

#top species all years
Top5species_allyears <- grid.arrange(top5_species14_plot, top5_species16_plot, top5_species18_plot, top5_species19_plot, nrow = 2, top = "Top Five Common Speices by year")

```
#During the four-year period covered by this analysis, the month of June held the record for the most wildlife admissions per month in each of the years for which data was available. It was also a recurring theme that the months of May through August were the busiest for clinic admissions. Some changes that occurred during this time period included the fact that each year saw an overall increase in admission numbers in comparison to the previous year, most likely as the clinic became more popular and well-known to the general public. In addition, the number of admissions in the months of May and August increased year after year, reaching significantly higher levels in the last two years.

#Over the four years of data included in this analysis, the top reasons for admission to the clinic included animals being orphaned as the leading cause and Unknown trauma as the second leading cause. Cat attacks, broken wings, and car-animal collisions were the next most common reasons for admission. However, the number of admissions due to cat attacks, broken wings, and vehicle-animal collisions varied slightly from year to year in terms of which was more common than the others.

#In each of the years studied, the Eastern Cottontail, Eastern Grey Squirrel, House Sparrow, and American Robin were consistently among the top four of the top five most common species admitted to the clinic. The Eastern cottontail was the most common species admitted to the clinic in all four years, followed by the Eastern grey squirrel. 

#Finally, I wanted to combine all of the intake record files from each individual year into a single merged dataset in order to analyze the merged intake records from all of the years included in this analysis, 2014, 2016, 2018, and 2019.

```{r, echo=FALSE}
#merging data
merged_intake <- merge(Records_14, Records_16, by=c ("month"))
merged_intake2 <- merge(Records_18, Records_19, by=c ("month"))
merge <- left_join(merged_intake, merged_intake2)

#plotting the intakes each year
Intakebymonth_all <- ggplot(merge) + aes(x = month(month, label = TRUE)) +
  geom_bar(fill = "#0099f9") +
  labs(x = "Month", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption =  element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  scale_y_continuous(label = label_number_si()) +
  labs(title = "Combined Monthly Wildlife Admissions, 2014-2019", caption = "Figure 16: The total number of admissions to the wildlife clinic by month, 2014-2018.")
Intakebymonth_all
```

```{r, echo=FALSE}
#2014-2018 intake by month data 

#calculate total intakes per month in tibble for all years intakes
#monthly total calculations for intakes admission 
Monthlystats_all <- merge %>%
  group_by(month) %>%
  tally()

#count monthly intakes all years
Monthlystats_all <- merge %>%
  group_by(month) %>%
  summarise(count = n()) %>%
  na.omit("Monthlystats_all") %>%
  top_n(12)



#tibble of monthly intakes, convert numeric month format to abbreviated month 
Monthlystats_all$month <- (month.abb[Monthlystats_all$month])

#convert monthly stats tibble into data frame
Monthlystats_all_table <- data.frame(Monthlystats_all)

#convert monthly stats data frame into table
setDT(Monthlystats_all_table)

#check if this was sucessful in turning data frame into data table 
is.data.table(Monthlystats_all_table)

#rename columns in data table
setnames(Monthlystats_all_table, c("month","count"), c("Month", "Admissions"))

#use flextable package
Monthlystats_all_tableflex <- flextable(Monthlystats_all_table)

#format table
Monthlystats_all_tableflex <- theme_vanilla(Monthlystats_all_tableflex)
Monthlystats_all_tableflex <- border_outer(Monthlystats_all_tableflex)
Monthlystats_all_tableflex <- border_inner_v(Monthlystats_all_tableflex)
Monthlystats_all_tableflex <- set_caption(Monthlystats_all_tableflex, "Table 13: The number of monthly admissions to the wildlife clinic by date, 2014-2018.")

#statistics of monthly admissions across all years
sum(Monthlystats_all$count)
#804332 total intakes across the years 2014, 2016, 2018, 2019

mean(Monthlystats_all$count)
#mean of monthly intakes = 67027, meaning across these four years of data the wildlife rehab averaged 67027 intakes

min(Monthlystats_all$count)
#minimum intake per month = 1558 , meaning the month with the least intakes per month across all data was December with a combined 1558 intakes from all four years

max(Monthlystats_all$count)
#maximum intake per month = 278006, meaning the month with the most intakes per month across all data was June, with 278006 total intakes per month combined across all four years

median(Monthlystats_all$count)
#median intake per month = 21875, meaning of the range for monthly intakes across all years of data or the middle number of intakes was 21875 intakes in a month
```

```{r, echo=FALSE}
Monthlystats_all_tableflex

```

#Across all four years of data, the combined number of intakes per month remained highest in June, with a total of 278,006 total intakes recorded from all four years of data. The number of combined admissions remained over 100,000 from May to August, but dropped to the lowest combined number of intakes in December, accounting for only 1,558 total combined intakes across all four years of admission records.

```{r, echo=FALSE}
#statistics of monthly admissions across all years
sum(Monthlystats_all$count)
#804332 total intakes across the years 2014, 2016, 2018, 2019

mean(Monthlystats_all$count)
#mean of monthly intakes = 67027, meaning across these four years of data the wildlife rehab averaged 67027 intakes

min(Monthlystats_all$count)
#minimum intake per month = 1558 , meaning the month with the least intakes per month across all data was December with a combined 1558 intakes from all four years

max(Monthlystats_all$count)
#maximum intake per month = 278006, meaning the month with the most intakes per month across all data was June, with 278006 total intakes per month combined across all four years

median(Monthlystats_all$count)
#median intake per month = 21875, meaning of the range for monthly intakes across all years of data or the middle number of intakes was 21875 intakes in a month

#remove extra column in Rec14
Records_14 <- select(Records_14, c(1,2,3,5,6,7))

#rbind all records data to make next plots
#remove extra column in Rec14
Records_14 <- select(Records_14, c(1,2,3,5,6,7))

#rbind data
Allyearsdata <- rbind(Records_14, Records_16, Records_18, Records_19)
#Add Year column to all data combined 
Allyearsdata$Year <- as.character(year(Allyearsdata$date))
Allyearsdata <- select(Allyearsdata, c(7))
#count observations in each year
Allyearsdata <- Allyearsdata %>%
  filter(Year != 2000) %>%
  filter(Year != 2001) %>%
  filter(Year != 2013) %>%
  filter(Year != 2015) %>%
  filter(Year != 2017)
Allyearsdata %>%
  count(Year)

Intakebyyear <- ggplot(Allyearsdata) + aes(x = Year) +
  geom_bar(fill = "#0099f9") +
  labs(x = "Year", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption =  element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Yearly Wildlife Admissions, 2014-2019", caption = "Figure 17: The number of yearly admissions 
       to the wildlife clinic from 2014 to 2019.")
Intakebyyear
```

```{r, echo=FALSE}
Intakebyyear

```
#The number of admissions to the wildlife clinic increased by nearly a thousand intakes between 2014, when there were a total of 2,133 intakes, and 2019, when there were a total of 3,014 intakes. Although admission numbers fell slightly in 2018, from 2,797 in the previous year on record, 2016, to 2,626 in 2018, they continued to rise in 2019 and exceeded the number of intakes recorded in all past years

```{r, echo=FALSE}
#all years top reasons 
#rbind data
Allyearsdata1 <- rbind(Records_14, Records_16, Records_18, Records_19)

#Add Year column to all data combined 
Allyearsdata1$Year <- as.character(year(Allyearsdata1$date))

#count observations in each year
Allyearsdata1 <- Allyearsdata1 %>%
  filter(Year != 2000) %>%
  filter(Year != 2001) %>%
  filter(Year != 2013) %>%
  filter(Year != 2015) %>%
  filter(Year != 2017)

#top reasons for admission all years
merge_admissions <- Allyearsdata1 %>%
  group_by(date, cause_for_admission) %>%
  tally()



#count top 5 common reasons for admission in all years
merge_admissions <- merge_admissions %>%
  group_by(cause_for_admission) %>%
  summarise(count = n()) %>%
  na.omit("merge_admissions") %>%
  top_n(5)

#plot top 5 common reasons for admission in 2019
#plot in descending order on x axis
#\n seperates label or title into next line
#added formatting code to axis, title, caption and labels
Merge_admissions_plot <- ggplot(data = merge_admissions, aes(x = reorder(cause_for_admission, -count), y = count)) + 
  geom_bar(stat = "identity", fill = "#69b3a2") +
  labs(x = "Reason for Admission", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption = element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
labs(title = "Top Five Reasons for Admission, by Date 2014-2019", caption = "Figure 18: The total number of admissions for each of the \n top five reasons for admission to the wildlife clinic, by date from 2014- 2019.")
Merge_admissions_plot
```
```{r, echo=FALSE}
#all years top species
#rbind data
Allyearsdata2 <- rbind(Records_14, Records_16, Records_18, Records_19)
#replace values to fix spelling and grammar errors
#replace "Eastern Grey Squirrel" with "Eastern Gray Squirrel" to match other variables of the same kind
Allyearsdata2$cause_for_admission <- gsub('Eastern Grey Squirrel', 'Eastern Gray Squirrel', Allyearsdata2$cause_for_admission)
Allyearsdata2$cause_for_admission [grepl("Eastern Grey Squirrel", Allyearsdata2$cause_for_admission)] <- "Eastern Gray Squirrel"
#Add Year column to all data combined 
Allyearsdata2$Year <- as.character(year(Allyearsdata2$date))

#count observations in each year
Allyearsdata2 <- Allyearsdata2 %>%
  filter(Year != 2000) %>%
  filter(Year != 2001) %>%
  filter(Year != 2013) %>%
  filter(Year != 2015) %>%
  filter(Year != 2017)

Allyearsdata2$cause_for_admission [grepl("Eastern Grey Squirrel", Allyearsdata2$cause_for_admission)] <- "Eastern Gray Squirrel"

#top species all years
merge_species <- Allyearsdata2 %>%
  group_by(species) %>%
  tally()


#count top 5 common species in all years
merge_species <- Allyearsdata2 %>%
  group_by(species) %>%
  summarise(count = n()) %>%
  na.omit("merge_species") %>%
  top_n(3)

#plot top 5 common reasons for admission in 2019
#plot in descending order on x axis
#\n seperates label or title into next line
#added formatting code to axis, title, caption and labels
merge_species_plot <- ggplot(data = merge_species, aes(x = reorder(species, -count), y = count)) + 
  geom_bar(stat = "identity", fill = "#CC3300") +
  labs(x = "Species", y = "Number of Admissions") +
  theme_bw() +
  theme(plot.title = element_text(size = 13, face = "bold", margin = margin(6, 6, 6, 6), hjust = 0.5), plot.caption = element_text(face = "bold", hjust = 0.5, vjust = -0.6)) +
  theme(axis.text.x = element_text(size = 9, vjust = 0.5)) +
  theme(axis.text.y = element_text(size = 9)) +
  theme(axis.title.x = element_text(vjust =-0.55)) +
  theme(axis.title.y = element_text(vjust =0.55)) +
  labs(title = "Top Three Most Frequently Admitted Species, 2014 - 2019", caption = "Figure 19: The top three most frequently admitted species and the total \n number of clinic admissions for each, 2014- 2019.")
merge_species_plot
```

